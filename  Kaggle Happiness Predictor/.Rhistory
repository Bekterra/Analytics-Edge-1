install.packages("gputools")
install.packages("gputools")
install.packages("gputools")
dyn.load
?dyn.load
install.packages("gputools")
install.packages("gputools")
install.packages("gputools")
install.packages("gputools")
library(gputools)
exit
library(gputools)
shell
!
library("gputools", lib.loc="/home/bobbruno/R/x86_64-pc-linux-gnu-library/3.1")
system('bash export')
system('/bin/sh export')
system('export')
shell('export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64')
system('export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64')
system('export')
sys.setenv(LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64")
Sys.setenv(LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64")
system('export')
Sys.setenv(LD_LIBRARY_PATH="/usr/lib/R/lib:/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64/server:/usr/local/cuda/lib64")
library(gputools)
library(gputools)
system('export')
Sys.setenv(CUDA_HOME="/usr/local/cuda", CUDA_LIB_PATH="/usr/local/cuda/lib64",CUDA_BIN="/usr/local/cuda/bin", PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/cuda/bin")
library(gputools)
system('export')
library("gputools", lib.loc="/home/bobbruno/R/x86_64-pc-linux-gnu-library/3.1")
gpu.matmult <- function(n) {
A <- matrix(runif(n * n), n ,n)
B <- matrix(runif(n * n), n ,n)
tic <- Sys.time()
C <- A %*% B
toc <- Sys.time()
comp.time <- toc - tic
cat("CPU: ", comp.time, "\n")
tic <- Sys.time()
C <- gpuMatMult(A, B)
toc <- Sys.time()
comp.time <- toc - tic
cat("GPU: ", comp.time, "\n")
}
gpu.matmult(5)
library(gputools)
exit()
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(x, y)
x
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
?rbinom
set.seed(10)
x <- rbinom(10, 1000, 0.5)
e <- rnorm(1000, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
?rbinom
set.seed(10)
x <- rbinom(1000, 10, 0.5)
e <- rnorm(1000, 0, 20)
y <- 0.5 + 2 * x + e
plot(x, y)
install.packages("RMySQL")
library(RMySQL)
ucscDb = dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDb, "show databases;")
View(result)
dbDisconnect(ucscDb)
install.packages("Deducer")
install.packages("Deducer")
install.packages(c("car", "evaluate", "RcppArmadillo", "reshape2", "robustbase", "RWeka", "RWekajars", "scales"))
library("Deducer", lib.loc="/home/bobbruno/R/x86_64-pc-linux-gnu-library/3.1")
JGR()
Deducer()
deducer()
deducer()
setwd("~/Dropbox/Coursera/Analytics Edge/Week 7 - Kaggle")
View(train)
3
deducer()
library("Deducer", lib.loc="/home/bobbruno/R/x86_64-pc-linux-gnu-library/3.1")
JGR()
